name: Docker-way build

on:
  push:
    branches: [main, deploy]


jobs:
#  create-envfile:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Make envfile
#        uses: SpicyPizza/create-envfile@v1
#        with:
#          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
#          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
#          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
#          envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
#          file_name: .env
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: DockerHub login
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin

      - name: Create Builder, application images
        run: |

          docker build -t ${{ secrets.DOCKERHUB_REPO }}:latest -f docker/api.Dockerfile .


      - name: Push application images
        run: |
          docker push ${{ secrets.DOCKERHUB_REPO }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: pulling application images
        uses: appleboy/ssh-action@master
        with:
          envs: GITHUB_SHA
          host: ${{ secrets.BACK_HOST }}
          username: ${{ secrets.BACK_USER }}
          password: ${{ secrets.BACK_PASSWORD }}
          script: |
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin
            cd diplom_backend/
            docker pull ${{ secrets.DOCKERHUB_REPO }}:latest
            export APICONTID=$(docker ps -q --filter "name=back-api")
            docker stop $APICONTID
            docker rm $APICONTID
            touch .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} > .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_HOST=${{ secrets.POSTGRES_HOST }} >> .env
            ls -lah
            cat .env
            docker run -d --network host --env-file ./.env --name back-api ${{ secrets.DOCKERHUB_REPO }}:latest
            docker image prune -f

