syntax = "proto3";
import "google/protobuf/timestamp.proto";
package pb;
//guide https://www.ardanlabs.com/blog/2020/06/python-go-grpc.html
//python -m venv env
//cd py && python -m grpc_tools.protoc -I.. --python_out=. --grpc_python_out=. prediction.proto
//cd internal/services/prediction && protoc --go_out=plugins=grpc:./pb --go_opt=paths=source_relative prediction.proto
option go_package = "github.com/Deiklov/diplom_backend";

message Metric {
    google.protobuf.Timestamp time = 1;
    double value = 2;
}

message PredictionReq {
    string stocks_name = 1;
    google.protobuf.Timestamp ended_time = 2;
    //seconds for predict value
    int64 step = 3;
}

message PredictionResp {
    repeated Metric time_series = 1;
}

service PredictAPI {
    rpc Predict(PredictionReq) returns (PredictionResp) {}
}